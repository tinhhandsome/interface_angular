import { ViewEncapsulation, Injector, Component } from "@angular/core";
import { CON_MASTER_ENTITY, ConMasterServiceProxy, BranchServiceProxy, CM_BRANCH_ENTITY } from "@shared/service-proxies/service-proxies";
import { finalize } from "rxjs/operators";
import { AuthStatusConsts } from "../../ultils/consts/AuthStatusConsts";
import { RecordStatusConsts } from "../../ultils/consts/RecordStatusConsts";
import { PopupBaseComponent } from "../../ultils/popup-base.component";

@Component({
    selector: "con-master-modal",
    templateUrl: "./con-master-modal.component.html",
    encapsulation: ViewEncapsulation.None
})
export class ConMasterModalComponent extends PopupBaseComponent<CON_MASTER_ENTITY> {

    constructor(injector: Injector,
        private conMasterService: ConMasterServiceProxy) {
        super(injector);
        this.filterInput = new CON_MASTER_ENTITY();
        this.keyMember = 'construcT_ID';

        this.initCombobox();
    }

    initCombobox() {
    }

    async getResult(checkAll: boolean = false): Promise<any> {

        this.setSortingForFilterModel(this.filterInputSearch);

        this.filterInputSearch.autH_STATUS = AuthStatusConsts.Approve;
        this.filterInputSearch.recorD_STATUS = RecordStatusConsts.Active;

        if (checkAll) {
            this.filterInputSearch.maxResultCount = -1;
        }

        var result = await this.conMasterService.cON_MASTER_Search(this.filterInputSearch)
            .pipe(finalize(() => this.hideTableLoading())).toPromise();

        if (checkAll) {
            this.selectedItems = result.items;
        }
        else {
            this.dataTable.records = result.items;
            this.dataTable.totalRecordsCount = result.totalCount;
            this.filterInputSearch.totalCount = result.totalCount;
        }

        return result;
    }
}